{"ast":null,"code":"var _jsxFileName = \"/Applications/Visual Studio copy/React/Lokaverkefni/Archive/src/pages/SelectDrinks.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport '../App.css';\nimport { Button, MissingOrder } from '../components';\nimport { getEmailParam, findOrder, updateOrder, missingOrder } from '../utils';\nimport { useNavigate } from 'react-router-dom';\nimport { NavBar } from '../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectDrinks = () => {\n  _s();\n  const navigate = useNavigate();\n  const [drink, setDrink] = useState();\n  const [selectedDrinks, setSelectedDrinks] = useState([]);\n  useEffect(() => {\n    const currentOrder = JSON.parse(localStorage.getItem('newOrder'));\n    fetch('https://api.punkapi.com/v2/beers').then(data => data.json()).then(data => setDrink(data)).then(() => {\n      if (currentOrder) {\n        setSelectedDrinks(currentOrder.drinks.map(item => item.id));\n      }\n      if (getEmailParam()) {\n        const order = findOrder(getEmailParam());\n        setSelectedDrinks(order.drinks.map(item => item.id));\n      }\n    });\n  }, []);\n  const addDrink = item => {\n    if (selectedDrinks.includes(item.id)) {\n      setSelectedDrinks(selectedDrinks.filter(id => id !== item.id));\n    } else setSelectedDrinks([...selectedDrinks, item.id]);\n  };\n  const isSelected = id => {\n    return selectedDrinks.includes(id);\n  };\n  const GoToNextPage = () => {\n    const email = getEmailParam();\n    if (email) {\n      const order = findOrder(email);\n      order.drinks = selectedDrinks.map(id => drink.find(item => item.id === id));\n      updateOrder(email, order);\n    } else {\n      const currentOrder = JSON.parse(localStorage.getItem('newOrder'));\n      localStorage.setItem('newOrder', JSON.stringify({\n        ...currentOrder,\n        drinks: selectedDrinks.map(id => drink.find(item => item.id === id))\n      }));\n    }\n    if (email) navigate(`/order?email=${email}`);else navigate('/order');\n  };\n  if (missingOrder()) return /*#__PURE__*/_jsxDEV(MissingOrder, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      page: \"drinks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drink-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drink-grid-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drink-grid-item1\",\n          children: drink === null || drink === void 0 ? void 0 : drink.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => addDrink(item),\n            className: \"grid-item-containers\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: item.tagline,\n              src: item.image_url,\n              style: {\n                maxHeight: 350,\n                width: 'fit-content',\n                padding: 20,\n                margin: 20\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), isSelected(item.id) && /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: 'red'\n              },\n              children: \"selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drink-grid-item2 grid-item-containers small-box\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => GoToNextPage(),\n            text: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectDrinks, \"fAiV8sTPnhGARQhlblcmj+Q30XE=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectDrinks;\nexport default SelectDrinks;\nvar _c;\n$RefreshReg$(_c, \"SelectDrinks\");","map":{"version":3,"names":["useEffect","useState","Button","MissingOrder","getEmailParam","findOrder","updateOrder","missingOrder","useNavigate","NavBar","SelectDrinks","navigate","drink","setDrink","selectedDrinks","setSelectedDrinks","currentOrder","JSON","parse","localStorage","getItem","fetch","then","data","json","drinks","map","item","id","order","addDrink","includes","filter","isSelected","GoToNextPage","email","find","setItem","stringify","index","tagline","image_url","maxHeight","width","padding","margin","name","color"],"sources":["/Applications/Visual Studio copy/React/Lokaverkefni/Archive/src/pages/SelectDrinks.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport '../App.css';\nimport { Button, MissingOrder } from '../components';\nimport { getEmailParam, findOrder, updateOrder, missingOrder } from '../utils';\nimport { useNavigate } from 'react-router-dom';\nimport { NavBar } from '../components';\n\nconst SelectDrinks = () => {\n  const navigate = useNavigate();\n  const [drink, setDrink] = useState();\n  const [selectedDrinks, setSelectedDrinks] = useState([]);\n\n  useEffect(() => {\n    const currentOrder = JSON.parse(localStorage.getItem('newOrder'));\n    fetch('https://api.punkapi.com/v2/beers')\n      .then((data) => data.json())\n      .then((data) => setDrink(data))\n      .then(() => {\n        if (currentOrder) {\n          setSelectedDrinks(currentOrder.drinks.map((item) => item.id));\n        }\n        if (getEmailParam()) {\n          const order = findOrder(getEmailParam());\n          setSelectedDrinks(order.drinks.map((item) => item.id));\n        }\n      });\n  }, []);\n\n  const addDrink = (item) => {\n    if (selectedDrinks.includes(item.id)) {\n      setSelectedDrinks(selectedDrinks.filter((id) => id !== item.id));\n    } else setSelectedDrinks([...selectedDrinks, item.id]);\n  };\n\n  const isSelected = (id) => {\n    return selectedDrinks.includes(id);\n  };\n\n  const GoToNextPage = () => {\n    const email = getEmailParam();\n    if (email) {\n      const order = findOrder(email);\n      order.drinks = selectedDrinks.map((id) => drink.find((item) => item.id === id));\n      updateOrder(email, order);\n    } else {\n      const currentOrder = JSON.parse(localStorage.getItem('newOrder'));\n      localStorage.setItem(\n        'newOrder',\n        JSON.stringify({\n          ...currentOrder,\n          drinks: selectedDrinks.map((id) => drink.find((item) => item.id === id))\n        })\n      );\n    }\n    if (email) navigate(`/order?email=${email}`);\n    else navigate('/order');\n  };\n\n  if (missingOrder()) return <MissingOrder />;\n\n  return (\n    <div>\n      <NavBar page=\"drinks\" />\n      <div className=\"drink-container\">\n        <div className=\"drink-grid-container\">\n          <div className=\"drink-grid-item1\">\n            {drink?.map((item, index) => (\n              <div key={index} onClick={() => addDrink(item)} className=\"grid-item-containers\">\n                <img\n                  alt={item.tagline}\n                  src={item.image_url}\n                  style={{ maxHeight: 350, width: 'fit-content', padding: 20, margin: 20 }}></img>\n                <h1>{item.name}</h1>\n                {isSelected(item.id) && <h2 style={{ color: 'red' }}>selected</h2>}\n              </div>\n            ))}\n          </div>\n          <div className=\"drink-grid-item2 grid-item-containers small-box\">\n            <Button onClick={() => GoToNextPage()} text=\"Next\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectDrinks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}